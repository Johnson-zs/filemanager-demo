/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp com.demo.filemanager.daemon.xml -p rootservice_interface
 *
 * qdbusxml2cpp is Copyright (C) 2017 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef ROOTSERVICE_INTERFACE_H
#define ROOTSERVICE_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.demo.filemanager.daemon.RootService
 */
class ComDemoFilemanagerDaemonRootServiceInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.demo.filemanager.daemon.RootService"; }

public:
    ComDemoFilemanagerDaemonRootServiceInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~ComDemoFilemanagerDaemonRootServiceInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<bool> createFileInAnyWhere(const QString &filePath)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(filePath);
        return asyncCallWithArgumentList(QStringLiteral("createFileInAnyWhere"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace com {
  namespace demo {
    namespace filemanager {
      namespace daemon {
        typedef ::ComDemoFilemanagerDaemonRootServiceInterface RootService;
      }
    }
  }
}
#endif
